import time


"""
网站上的用户名密码系统大多是通过md5进行加密，然后存在数据库中的
但如果你设置的用户名密码太过简单，则可能会被黑客反推出来


案例：

比如你在淘宝，京东，微信设置的密码都是相同的，且很简单，如：hi harry
通过md5加密后，hash value是：0ee65bbe64ef07db6eff155f45c9338e
那么你三个网站上密码对应的都是这个 hash value

淘宝：0ee65bbe64ef07db6eff155f45c9338e
京东：0ee65bbe64ef07db6eff155f45c9338e
微信：0ee65bbe64ef07db6eff155f45c9338e

若某一个网站被黑客攻击，黑客在该网站数据库中拿到了你的hash value，虽然他不能直接反推出来你的明文密码
但是，他可以通过穷举法，字符串拼接，生成md5加密后的hash value，然后对比这个值和数据库中你密码对应的值
    过程如下：
        黑客可以设计程序，让程序跑出来一个hi，然后在出来一个harry，然后他把两个字符串拼接后生成hash value
        之后用生成的value和数据库的一对比，发现一样。那么他就知道了你的明文密码，
        这个过程被称为：“撞库”
        被撞库的网站也就 “脱库” 了
        
为了防止这类事情的发生，网站采取了 “加盐” 的方式进行二次加密：

你输入密码后经过md5生成了0ee65bbe64ef07db6eff155f45c9338e，
网站会通过一个算法随机生成一个字符串，然后把这个字符串拼接到你的hash value后面，
之后再对这个拼接后的字符串进行二次加密，将这个二次加密后的hash value存在数据库中。

如果黑客不知道网站随机生成字符串的算法，则不能根据二次加密后的hash value反推明文密码



"""
import hashlib
m = hashlib.md5(b'hi harry')
x = m.hexdigest()
print(x)

